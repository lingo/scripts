#!/usr/bin/perl
use strict;
use warnings;
use Data::Dumper;

# TODO: check for all cross-platform standard perl mods here
my @std = qw{
	AnyDBM_File Attribute--Handlers AutoLoader AutoSplit B B--Asmdata
	B--Assembler B--Bblock B--Bytecode B--C B--CC B--Concise B--Debug
	B--Deparse B--Disassembler B--Lint B--Showlex B--Stackobj B--Stash B--Terse
	B--Xref Benchmark ByteLoader CGI CGI--Apache CGI--Carp CGI--Cookie
	CGI--Fast CGI--Pretty CGI--Push CGI--Switch CGI--Util CPAN CPAN--FirstTime
	CPAN--Nox Carp Carp--Heavy Class--ISA Class--Struct Config Cwd Data::Dumper
	DB DB_File Devel--SelfStubber Digest DirHandle Dumpvalue Encode English Env
	Errno Exporter Exporter--Heavy ExtUtils--Command ExtUtils--Command--MM
	ExtUtils--Constant ExtUtils--Embed ExtUtils--Install ExtUtils--Installed
	ExtUtils--Liblist ExtUtils--MM ExtUtils--MM_Any ExtUtils--MM_BeOS
	ExtUtils--MM_Cygwin ExtUtils--MM_DOS ExtUtils--MM_MacOS ExtUtils--MM_NW5
	ExtUtils--MM_OS2 ExtUtils--MM_UWIN ExtUtils--MM_Unix ExtUtils--MM_VMS
	ExtUtils--MM_Win32 ExtUtils--MM_Win95 ExtUtils--MY ExtUtils--MakeMaker
	ExtUtils--Manifest ExtUtils--Mkbootstrap ExtUtils--Mksymlists
	ExtUtils--Packlist ExtUtils--testlib Fatal Fcntl File--Basename
	File--CheckTree File--Compare File--Copy File--DosGlob File--Find
	File--Path File--Spec File--Spec--Cygwin File--Spec--Epoc
	File--Spec--Functions File--Spec--Mac File--Spec--OS2 File--Spec--Unix
	File--Spec--VMS File--Spec--Win32 File--Temp File--stat FileCache
	FileHandle Filter--Simple FindBin Getopt--Long Getopt--Std Hash--Util
	I18N--Collate I18N--LangTags I18N--LangTags--List IO IPC--Open2 IPC--Open3
	Locale--Constants Locale--Country Locale--Currency Locale--Language
	Locale--Maketext Locale--Maketext--TPJ13 Locale--Script Math--BigFloat
	Math--BigInt Math--BigInt--Calc Math--BigRat Math--Complex Math--Trig
	Memoize Memoize--AnyDBM_File Memoize--Expire Memoize--ExpireFile
	Memoize--ExpireTest Memoize--NDBM_File Memoize--SDBM_File Memoize--Storable
	NDBM_File NEXT Net--Cmd Net--Config Net--Domain Net--FTP Net--NNTP
	Net--Netrc Net--POP3 Net--Ping Net--SMTP Net--Time Net--hostent
	Net--libnetFAQ Net--netent Net--protoent Net--servent O ODBM_File Opcode
	POSIX PerlIO PerlIO--via--QuotedPrint Pod--Checker Pod--Find Pod--Functions
	Pod--Html Pod--InputObjects Pod--LaTeX Pod--Man Pod--ParseLink
	Pod--ParseUtils Pod--Parser Pod--Plainer Pod--Select Pod--Text
	Pod--Text--Color Pod--Text--Overstrike Pod--Text--Termcap Pod--Usage
	SDBM_File Safe Search--Dict SelectSaver SelfLoader Shell Socket Storable
	Switch Symbol Term--ANSIColor Term--Cap Term--Complete Term--ReadLine Test
	Test--Builder Test--Harness Test--Harness--Assert Test--Harness--Iterator
	Test--Harness--Straps Test--More Test--Simple Test--Tutorial Text--Abbrev
	Text--Balanced Text--ParseWords Text--Soundex Text--Tabs Text--Wrap Thread
	Thread--Queue Thread--Semaphore Tie--Array Tie--File Tie--Handle Tie--Hash
	Tie--Memoize Tie--RefHash Tie--Scalar Tie--SubstrHash Time--Local
	Time--gmtime Time--localtime Time--tm UNIVERSAL Unicode--Collate
	Unicode--UCD User--grent User--pwent Win32
};

my %std = map { $_ => 1 } @std;

my %cpanmap = ();
my %debmap = ( 'LWP'	=> 'libwww-perl');


my @debs;
my @cpan;

my $args = '"' . join('" "', @ARGV) . '"';
my @uses = qx{ egrep -h -o '^use\\s+([a-zA-Z_:]+)' $args | sort -u | sed -rn '/warnings|strict|lib/d;s/use\\s+//p' };
chomp for @uses;

for (@uses) {
	next if ($std{$_});
	if ($debmap{$_}) {
		push @debs, $debmap{$_};
	} elsif ($cpanmap{$_}) {
		push @cpan, $cpanmap{$_};
	} else {
		my $mod = $_;
		s/::/-/g;
		s/^/lib/;
		s/(.+)/\L$1-perl/;
		my $det = qx(dpkg-query -W -f='\${Installed-Size}' $_ 2>/dev/null);
		if ($? == 0) { # && !$det) {
			push @debs, $_;
		} else { #elsif($? != 0) {
			push @cpan, $mod;
		}
	}
}

print 'sudo aptitude install ' . join(' ', @debs),"\n" if @debs;
print 'cpan ' . join(' ', @cpan), "\n" if @cpan;

__END__

ST=$(dpkg-query -W -f='${Package}:${Installed-Size}\n' $i 2>/dev/null)
if [ $? -eq 0 ]; then
	ST=${ST#*:}
	if [ -z "$ST" ]; then
		DEB="$DEB $i"
	fi
else
	CPAN
fi

done

if [ -n "$DEB" ]; then
	echo "sudo aptitude install $DEB"
fi

